name: Deploy Preview to Firebase Hosting
on:
  push:
    branches:
      - '*'
      - '!main'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options: ['preview', 'live']
        default: 'preview'
      validity:
        description: 'Validity of the preview'
        required: true
        type: choice
        options: ['1 day', '3 days', '7 days', '14 days', '30 days']
        default: '7 days'

jobs:
  preview_deploy:
    name: Deploy Preview to Firebase Hosting
    runs-on: ubuntu-latest
    env:
      VITE_FIREBASE_API_KEY: ${{secrets.FIREBASE_API_KEY}}
      VITE_FIREBASE_AUTH_DOMAIN: ${{secrets.FIREBASE_AUTH_DOMAIN}}
      VITE_FIREBASE_PROJECT_ID: ${{secrets.FIREBASE_PROJECT_ID}}
      VITE_FIREBASE_STORAGE_BUCKET: ${{secrets.FIREBASE_STORAGE_BUCKET}}
      VITE_FIREBASE_MESSAGING_SENDER_ID: ${{secrets.FIREBASE_MESSAGING_SENDER_ID}}
      VITE_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
      VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
      VITE_FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
    permissions:
      issues: write
      pull-requests: write
      checks: write
      actions: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: pnpm/action-setup@v2.2.4
        with:
          #          version: 7.0.0
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm run build
      - name: Convert validity to acceptable format
        id: validity
        run: |
          echo "validity=$(echo '${{ github.event.inputs.validity }}' | sed 's/ day\(s\)\?/d/')" >> $GITHUB_OUTPUT
      - name: Deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        id: deploy
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_JFGI_SITE }}'
          projectId: jfgi-site
          channelId: preview
          expires: ${{ steps.validity.outputs.validity }}
      - name: Inject slug/short variables
        id: slugs
        uses: rlespinasse/github-slug-action@v4
      - name: Create Issue
        uses: dblock/create-a-github-issue@v3
        if: ${{ success() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PREVIEW_URL: ${{ steps.deploy.outputs.details_url }}
          EXPIRES_AT: ${{ steps.deploy.outputs.expire_time }}
          COMMIT_SHA: ${{ env.GITHUB_SHA_SHORT }}
          BRANCH: ${{ github.ref_name }}
        with:
          filename: .github/PREVIEW_TEMPLATE.md
